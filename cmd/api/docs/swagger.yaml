basePath: /
definitions:
  models.User:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      last_login:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A secure API with JWT authentication
  title: JWT Auth Service API
  version: "1.0"
paths:
  /api/users:
    get:
      description: Retrieve all users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Server error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - users
  /api/users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            properties:
              deleted:
                type: boolean
            type: object
        "400":
          description: Invalid ID format
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: User not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - Bearer: []
      summary: Delete user
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            properties:
              token:
                type: string
              user:
                $ref: '#/definitions/models.User'
            type: object
        "400":
          description: Invalid request or credentials
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user and return a JWT token
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered
          schema:
            properties:
              token:
                type: string
              user:
                type: string
            type: object
        "400":
          description: Invalid request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register user
      tags:
      - auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
